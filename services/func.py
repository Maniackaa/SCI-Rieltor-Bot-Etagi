import asyncio
import datetime

from aiogram import Bot

from database.db import Session, User, Menu, History
from config_data.config import LOGGING_CONFIG, config

import logging.config

from services.google_func import read_stats_from_table

logging.config.dictConfig(LOGGING_CONFIG)
logger = logging.getLogger('bot_logger')
err_log = logging.getLogger('errors_logger')


def check_user(id):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ tg_id"""
    logger.debug(f'–ò—â–µ–º —é–∑–µ—Ä–∞ {id}')
    with Session() as session:
        user: User = session.query(User).filter(User.tg_id == str(id)).first()
        logger.debug(f'–†–µ–∑—É–ª—å—Ç–∞—Ç: {user}')
        return user


def get_or_create_user(user) -> User:
    """–ò–∑ —é–∑–µ—Ä–∞ –¢–ì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É—â–µ—Å—Ç—É—é—â–µ–≥–æ User –ª–∏ —Å–æ–∑–¥–∞–µ—Ç –µ–≥–æ"""
    try:
        tg_id = user.id
        username = user.username
        logger.debug(f'username {username}')
        old_user = check_user(tg_id)
        if old_user:
            logger.debug('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ')
            return old_user
        logger.debug('–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        with Session() as session:
            new_user = User(tg_id=tg_id,
                            username=username,
                            register_date=datetime.datetime.now()
                            )
            session.add(new_user)
            session.commit()
            logger.debug(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {new_user}')
        return new_user
    except Exception as err:
        err_log.error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ–∑–¥–∞–Ω', exc_info=True)


def update_user(tg_id, rieltor_code, g_user):
    logger.debug(f'–î–æ–±–∞–≤–ª—è–µ–º {(tg_id, rieltor_code, g_user)}')
    session = Session()
    with session:
        user: User = session.query(User).filter(User.tg_id == str(tg_id)).first()
        user.rieltor_code = rieltor_code
        for key, val in g_user.items():
            setattr(user, key, val)
        logger.debug(f'–Æ–∑–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω {user}')
        session.commit()


def get_menu_from_index(index) -> Menu:
    session = Session()
    with session:
        menu: Menu = session.query(Menu).filter(Menu.index == index).first()
        return menu


# def get_all_menu_items() -> Menu:
#     session = Session()
#     with session:
#         menu: Menu = session.query(Menu).filter().all()
#         return menu

def get_index_menu_from_text(text) -> str:
    """–î–æ—Å—Ç–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –∏–∑ –º–µ–Ω—é –ø–æ —Ç–µ–∫—Å—Ç—É"""
    if text == '‚á§ –ù–∞–∑–∞–¥':
        return '0'
    session = Session()
    with session:
        menu: Menu = session.query(Menu).filter(Menu.text == text).first()
        return menu.index



def write_log(user_id, text):
    session = Session()
    with session:
        history: History = History(user_id=user_id, text=text, time=datetime.datetime.now())
        session.add(history)
        session.commit()


def get_history(limit):
    session = Session()
    with session:
        historys = session.query(History).order_by(History.id.desc()).limit(limit).all()
        logger.debug(historys)
        return historys


def format_user_sats(user_dict, date: str):
    """{'–§–ò–û —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞': '–ë–∞–±–∏–∫–æ–≤–∞ –ê–Ω–∞—Å—Ç–∞—Å–∏—è –ê—Ä–∫–∞–¥—å–µ–≤–Ω–∞',
     '–ö–∞—Ç–µ–≥–æ—Ä–∏—è': '0-3',
      '–†–µ–π—Ç–∏–Ω–≥': '6',
       '–ò–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å': '78%',
        '–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É, –ø–ª–∞–Ω': '15',
         '–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É, —Ñ–∞–∫—Ç': '11',
          '–û–±—ä–µ–∫—Ç—ã –≤ –±–∞–∑–µ (–∞–∫—Ç–∏–≤–Ω—ã–µ), –ø–ª–∞–Ω': '20',
           '–û–±—ä–µ–∫—Ç—ã –≤ –±–∞–∑–µ (–∞–∫—Ç–∏–≤–Ω—ã–µ), —Ñ–∞–∫—Ç': '7',
            '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ, –ø–ª–∞–Ω': '3',
             '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ, —Ñ–∞–∫—Ç': '3',
              '–ó–∞—è–≤–∫–∏ –≤ –±–∞–Ω–∫ –ø–æ –∏–ø–æ—Ç–µ–∫–µ, –ø–ª–∞–Ω': '1',
     '–ó–∞—è–≤–∫–∏ –≤ –±–∞–Ω–∫, —Ñ–∞–∫—Ç': '3',
      '–ü–æ–¥–±–æ—Ä–∫–∏, –ø–ª–∞–Ω': '11',
       '–ü–æ–¥–±–æ—Ä–∫–∏, —Ñ–∞–∫—Ç': '10',
        '–ü–æ–∫–∞–∑—ã (–ø–æ–∫—É–ø–∞—Ç–µ–ª—å), –ø–ª–∞–Ω': '4',
         '–ü–æ–∫–∞–∑—ã (–ø–æ–∫—É–ø–∞—Ç–µ–ª—å), —Ñ–∞–∫—Ç': '3',
          '–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É, –ø–ª–∞–Ω': '1100',
           '–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É, —Ñ–∞–∫—Ç': '3',
            '–ì–æ—Ä–æ–¥': '–û–º—Å–∫'}"""
    """
        –í–∞—à–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ 29.08.2023*
        
        - –ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É 1000 –∏–∑ 5000
        - –ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å—é - 10 –∏–∑ 20
        - –û–±—ä–µ–∫—Ç—ã –≤ –±–∞–∑–µ (–∞–∫—Ç–∏–≤–Ω—ã–µ) - 30 –∏–∑ 40
        - –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ - 10 –∏–∑ 15
        - –ó–∞—è–≤–∫–∏ –≤ –±–∞–Ω–∫ –ø–æ –∏–ø–æ—Ç–µ–∫–µ - 5 –∏–∑ 7
        - –ü–æ–¥–±–æ—Ä–∫–∏ - 10 –∏–∑ 20
        - –ü–æ–∫–∞–∑—ã (–ø–æ–∫—É–ø–∞—Ç–µ–ª—å) - 10 –∏–∑ 20
        
        –ò–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å: 20%
        –í—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ 7 –∏–∑ 15 –º–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ –≥–æ—Ä–æ–¥–∞üìà
        
        *–ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º

    """
    print(user_dict)
    logger.debug(user_dict)
    logger.debug(f'–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: {user_dict}')
    msg = ''
    if user_dict['–ö–∞—Ç–µ–≥–æ—Ä–∏—è'] == '0-3':
        msg = (f'–í–∞—à–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ {date}*\n\n'
               f"- –ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É {user_dict['–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É, —Ñ–∞–∫—Ç']} –∏–∑ {user_dict['–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É, –ø–ª–∞–Ω']}\n"
               f"- –ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å—é - {user_dict['–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É, —Ñ–∞–∫—Ç']} –∏–∑ {user_dict['–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É, –ø–ª–∞–Ω']}\n"
               f"- –û–±—ä–µ–∫—Ç—ã –≤ –±–∞–∑–µ (–∞–∫—Ç–∏–≤–Ω—ã–µ) - {user_dict['–û–±—ä–µ–∫—Ç—ã –≤ –±–∞–∑–µ (–∞–∫—Ç–∏–≤–Ω—ã–µ), —Ñ–∞–∫—Ç']} –∏–∑ {user_dict['–û–±—ä–µ–∫—Ç—ã –≤ –±–∞–∑–µ (–∞–∫—Ç–∏–≤–Ω—ã–µ), –ø–ª–∞–Ω']}\n"
               f"- –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ - {user_dict['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ, —Ñ–∞–∫—Ç']} –∏–∑ {user_dict['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ, –ø–ª–∞–Ω']}\n"
               f"- –ó–∞—è–≤–∫–∏ –≤ –±–∞–Ω–∫ –ø–æ –∏–ø–æ—Ç–µ–∫–µ - {user_dict['–ó–∞—è–≤–∫–∏ –≤ –±–∞–Ω–∫, —Ñ–∞–∫—Ç']} –∏–∑ {user_dict['–ó–∞—è–≤–∫–∏ –≤ –±–∞–Ω–∫ –ø–æ –∏–ø–æ—Ç–µ–∫–µ, –ø–ª–∞–Ω']}\n"
               f"- –ü–æ–¥–±–æ—Ä–∫–∏ - {user_dict['–ü–æ–¥–±–æ—Ä–∫–∏, —Ñ–∞–∫—Ç']} –∏–∑ {user_dict['–ü–æ–¥–±–æ—Ä–∫–∏, –ø–ª–∞–Ω']}\n"
               f"- –ü–æ–∫–∞–∑—ã (–ø–æ–∫—É–ø–∞—Ç–µ–ª—å) - {user_dict['–ü–æ–∫–∞–∑—ã (–ø–æ–∫—É–ø–∞—Ç–µ–ª—å), —Ñ–∞–∫—Ç']} –∏–∑ {user_dict['–ü–æ–∫–∞–∑—ã (–ø–æ–∫—É–ø–∞—Ç–µ–ª—å), –ø–ª–∞–Ω']}\n\n"
               f"<b>–ò–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å: {user_dict['–ò–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å']}</b>\n"
               f"–í—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ {user_dict['–†–µ–π—Ç–∏–Ω–≥']} –º–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ –≥–æ—Ä–æ–¥–∞üìà\n\n"
               )
    elif user_dict['–ö–∞—Ç–µ–≥–æ—Ä–∏—è'] == '–ü–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è':
        msg = (f'–í–∞—à–∏ –ø–ª–∞–Ω–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ {date}*\n\n'
               f"- –ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É - {user_dict['–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É, –ø–ª–∞–Ω']}\n"
               f"- –ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É - {user_dict['–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É, –ø–ª–∞–Ω']}\n"
               f"- –û–±—ä–µ–∫—Ç—ã –≤ –±–∞–∑–µ (–∞–∫—Ç–∏–≤–Ω—ã–µ) - {user_dict['–û–±—ä–µ–∫—Ç—ã –≤ –±–∞–∑–µ (–∞–∫—Ç–∏–≤–Ω—ã–µ), –ø–ª–∞–Ω']}\n"
               f"- –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ - {user_dict['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ, –ø–ª–∞–Ω']}\n"
               f"- –ó–∞—è–≤–∫–∏ –≤ –±–∞–Ω–∫ –ø–æ –∏–ø–æ—Ç–µ–∫–µ - {user_dict['–ó–∞—è–≤–∫–∏ –≤ –±–∞–Ω–∫ –ø–æ –∏–ø–æ—Ç–µ–∫–µ, –ø–ª–∞–Ω']}\n"
               f"- –ü–æ–¥–±–æ—Ä–∫–∏ - {user_dict['–ü–æ–¥–±–æ—Ä–∫–∏, –ø–ª–∞–Ω']}\n"
               f"- –ü–æ–∫–∞–∑—ã (–ø–æ–∫—É–ø–∞—Ç–µ–ª—å) - {user_dict['–ü–æ–∫–∞–∑—ã (–ø–æ–∫—É–ø–∞—Ç–µ–ª—å), –ø–ª–∞–Ω']}\n\n"
               )
    elif user_dict['–ö–∞—Ç–µ–≥–æ—Ä–∏—è'] == '4+':
        msg = (f'–í–∞—à–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ {date}*\n\n'
               f"- –ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É {user_dict['–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É, —Ñ–∞–∫—Ç']}\n"
               f"- –ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É - {user_dict['–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É, —Ñ–∞–∫—Ç']}\n"
               f"- –û–±—ä–µ–∫—Ç—ã –≤ –±–∞–∑–µ (–∞–∫—Ç–∏–≤–Ω—ã–µ) - {user_dict['–û–±—ä–µ–∫—Ç—ã –≤ –±–∞–∑–µ (–∞–∫—Ç–∏–≤–Ω—ã–µ), —Ñ–∞–∫—Ç']}\n"
               f"- –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ - {user_dict['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ, —Ñ–∞–∫—Ç']}\n"
               f"- –ó–∞—è–≤–∫–∏ –≤ –±–∞–Ω–∫ –ø–æ –∏–ø–æ—Ç–µ–∫–µ - {user_dict['–ó–∞—è–≤–∫–∏ –≤ –±–∞–Ω–∫, —Ñ–∞–∫—Ç']}\n"
               f"- –ü–æ–¥–±–æ—Ä–∫–∏ - {user_dict['–ü–æ–¥–±–æ—Ä–∫–∏, —Ñ–∞–∫—Ç']}\n"
               f"- –ü–æ–∫–∞–∑—ã (–ø–æ–∫—É–ø–∞—Ç–µ–ª—å) - {user_dict['–ü–æ–∫–∞–∑—ã (–ø–æ–∫—É–ø–∞—Ç–µ–ª—å), —Ñ–∞–∫—Ç']}\n\n"
               )

    msg += '*–ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º'
    return msg


async def send_message_to_manager(bot, user, text_msg):
    await bot.send_message(
        chat_id=config.tg_bot.GROUP_ID,
        # chat_id='EtagiManagers',
        text=(
            f'{text_msg}\n\n'
            f'#id{user.tg_id}\n'
            f'{user.fio}'
        ),
        parse_mode='HTML'
    )


async def send_report_to_users(users_to_send: list[User], bot: Bot):
    user_stats = await read_stats_from_table()
    for user in users_to_send:
        try:
            if user.rieltor_code in user_stats:
                logger.debug(f'–°—Ç–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user} –Ω–∞–π–¥–µ–Ω–∞')
                text = format_user_sats(user_stats[user.rieltor_code],
                                        user_stats['date'])
                await bot.send_message(user.tg_id, text)
                await asyncio.sleep(0.2)
                logger.info(f'–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.fio or user.tg_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
        except Exception:
            await bot.send_message(config.tg_bot.admin_ids[0], '–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.fio or user.tg_id} –ù–ï –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
            err_log.error(f'–æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.tg_id}', exc_info=False)